{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOr1dA8gv3lCykPhYuIPHyJ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vitornine/19-projeto/blob/main/Pjaula_109\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_6zWZSdETOqk",
        "outputId": "f1e71b0f-a5a7-48b4-8b78-85d4e9fa5654"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Obrigada pela resposta, você avaliou o filme com ***\n",
            "{'Movie Name': 'Titanic', 'Story rating': 1, 'Actor rating': 5, 'Music rating': 5, 'Avg rating': 3}\n"
          ]
        }
      ],
      "source": [
        "\n",
        "class MovieReview:\n",
        "  def __init__(self, movie, story, actors, music):\n",
        "    #Nome do filme\n",
        "    self.movie_name = movie\n",
        "\n",
        "    #Avaliação\n",
        "    self.story_rating = story\n",
        "    self.actor_rating = actors\n",
        "    self.music_rating = music\n",
        "\n",
        "    #Avaliações  médias\n",
        "    self.avg = int((self.story_rating + self.actor_rating +  self.music_rating )/3)\n",
        "\n",
        "    #Informações do filme\n",
        "    self.myrating = {\n",
        "        \"Movie Name\" : self.movie_name,\n",
        "        \"Story rating\" : self.story_rating,\n",
        "        \"Actor rating\" : self.actor_rating,\n",
        "        \"Music rating\" : self.music_rating,\n",
        "        \"Avg rating\" : self.avg\n",
        "    }\n",
        "\n",
        "  #Método para adicionar avaliação\n",
        "  def add_movie_ratings(self, movie_list):\n",
        "    moviereviews.append(self.myrating)\n",
        "\n",
        "  #Método para dar estrelas\n",
        "  def avg_start_ratings(self, movie_list):\n",
        "    for movie in movie_list:\n",
        "      if movie[\"Avg rating\"]== 1:\n",
        "        print(\"Obrigada pela resposta, você avaliou o filme com *\")\n",
        "        print(movie)\n",
        "      elif movie[\"Avg rating\"]== 2:\n",
        "        print(\"Obrigada pela resposta, você avaliou o filme com **\")\n",
        "        print(movie)\n",
        "      elif movie[\"Avg rating\"]== 3:\n",
        "        print(\"Obrigada pela resposta, você avaliou o filme com ***\")\n",
        "        print(movie)\n",
        "      elif movie[\"Avg rating\"]== 4:\n",
        "        print(\"Obrigada pela resposta, você avaliou o filme com ****\")\n",
        "        print(movie)\n",
        "      elif movie[\"Avg rating\"]== 5:\n",
        "        print(\"Obrigada pela resposta, você avaliou o filme com *****\")\n",
        "        print(movie)\n",
        "\n",
        "moviereviews = []\n",
        "\n",
        "\n",
        "#Novo objeto da classe MovieReview\n",
        "review2 = MovieReview('Titanic', 1, 5, 5)\n",
        "\n",
        "#Adicionar nova avaliação\n",
        "review2.add_movie_ratings(moviereviews)\n",
        "\n",
        "#Mostrar Avaliação\n",
        "review2.avg_start_ratings(moviereviews)"
      ]
    }
  ]
}